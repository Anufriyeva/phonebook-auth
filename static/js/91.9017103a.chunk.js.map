{"version":3,"file":"static/js/91.9017103a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styles.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styles.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormContainer = styled.div`\n  background-color: #f9f9f9;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  display: block;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #df3b01;\n  color: #fff;\n  font-size: 16px;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ff7f50;\n  }\n`;","import React, { useState } from 'react';\nimport {ContactFormContainer, Form, Label, Input, SubmitButton} from './ContactForm.styles'\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContact } from 'store/thunk';\n// import { nanoid } from '@reduxjs/toolkit';\nimport { getContacts } from 'store/selectors';\nimport { addContacts } from 'store/thunk';\n\n\nconst INITIAL_STATE = {\n    name: '',\n    number: '',\n  };\n\n  const ContactForm = () => {\n    const [formData, setFormData] = useState(INITIAL_STATE);\n\n    const { contacts } = useSelector(getContacts);\n\n  //   const nameId = nanoid();\n  // const phoneId = nanoid();\n    \n    const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value.trim(),\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const existingContact = contacts.find(\n      contact => contact.name === formData.name\n    );\n    if (existingContact) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    dispatch(addContacts(formData));\n    setFormData(INITIAL_STATE);\n  };\n\n  return (\n    <ContactFormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            // id={nameId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={formData.name}\n            onChange={handleChange}\n            placeholder=\"Name\"\n          />\n        </Label>\n        <Label>\n          Phone Number:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            // id={phoneId}\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={formData.number}\n            onChange={handleChange}\n            placeholder=\"Phone Number\"\n          />\n        </Label>\n        <SubmitButton type=\"submit\">Add Contact</SubmitButton>\n      </Form>\n    </ContactFormContainer>\n  );\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const ContactItemContainer = styled.div`\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin: 10px 0;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactName = styled.p`\n  font-weight: bold;\n`;\n\nexport const ContactNumber = styled.p`\n  color: #555;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: #5dacc9;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  cursor: pointer;\n  &:hover {\n    background-color: #3897ba;\n  }\n`;\n","import React from 'react';\nimport {ContactItemContainer, ContactInfo, ContactName, DeleteButton, ContactNumber} from './ContactItem.styles';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'store/thunk';\n// import { deleteContact } from 'store/contactsSlice';\n\nconst ContactItem = ({ contact }) => {\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n  dispatch(deleteContacts(contact.id));\n};\n\n  return (\n    <ContactItemContainer>\n      <ContactInfo>\n        <ContactName>Name: {contact.name}</ContactName>\n        <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n      </ContactInfo>\n      <ContactNumber>Phone: {contact.number}</ContactNumber>\n    </ContactItemContainer>\n  );\n};\n\nexport default ContactItem;","import styled from 'styled-components';\n\nexport const ContactListContainer = styled.div`\n  margin-top: 20px;\n  border: 1px solid #ccc;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n`;","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'store/selectors';\nimport { ContactListContainer } from './ContactList.styles';\n\n\nconst ContactList = () => {\n  const {contacts} = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = (filter, contacts) => {\n  if (!filter) return contacts;\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n  const visibleContacts = filteredContacts(filter, contacts);\n\n\n  return (\n    <ContactListContainer>\n      {(visibleContacts ?? contacts).map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n        />\n      ))}\n    </ContactListContainer>\n  );\n};\n\nexport default ContactList;","import React from 'react';\nimport {Label, Input} from '../ContactForm/ContactForm.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'store/filterSlice';\nimport { getFilter } from 'store/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const filterValue = e.target.value.toLowerCase();\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name:\n        <Input\n          type=\"text\"\n          value={filter}\n          onChange={handleChange}\n          placeholder=\"Looking for someone?\"\n        />\n      </Label>\n    </div>\n  );\n};\n\nexport default Filter;","import ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"store/selectors\";\nimport { fetchContacts } from \"store/thunk\";\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    const { isLoading, error } = useSelector(getContacts);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading && <b>Loading contacts...</b>}\n            {error && <b>{error}</b>}\n            <ContactList />\n        </div>\n    )\n}\n\nexport default ContactsPage"],"names":["ContactFormContainer","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Label","_templateObject3","Input","_templateObject4","SubmitButton","_templateObject5","INITIAL_STATE","name","number","_useState","useState","_useState2","_slicedToArray","formData","setFormData","contacts","useSelector","getContacts","dispatch","useDispatch","handleChange","e","_e$target","target","value","prevData","_objectSpread","_defineProperty","trim","_jsx","children","_jsxs","onSubmit","preventDefault","find","contact","alert","concat","addContacts","type","pattern","title","required","onChange","placeholder","ContactItemContainer","ContactInfo","ContactName","ContactNumber","DeleteButton","_ref","onClick","deleteContacts","id","ContactListContainer","visibleContacts","filter","toLowerCase","includes","filteredContacts","getFilter","map","ContactItem","filterValue","setFilter","_useSelector","isLoading","error","useEffect","fetchContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}